import { useRouter } from 'next/router'
import { useState, useEffect } from 'react'
import styles from '@/styles/components/CampaignModal.module.scss'
import CharacterChoiceModal from './CharacterChoiceModal'
import ConfirmCreateModal from './ConfirmCreateModal'
import api from '@/lib/api'

export default function CampaignModal({ campaign, onClose, isMember, currentUser }) {
  const router = useRouter()
  const [showCharacterChoice, setShowCharacterChoice] = useState(false)
  const [showCreateConfirm, setShowCreateConfirm] = useState(false)
  const [userCharacters, setUserCharacters] = useState([])

  const {
    id,
    name,
    avatar,
    owner,
    isPublic,
    createdAt,
    difficulty,
    players,
    maxPlayers,
    startLevel,
    allowMulticlass,
    useHomebrew,
    mapGridSize,
    description
  } = campaign || {}

  const isDM = currentUser?.id && owner?.id && currentUser.id === owner.id
  const playerCount = Array.isArray(players) ? players.length : 0

  const difficultyMap = {
    EASY: '–õ–µ–≥–∫–∞',
    NORMAL: '–°–µ—Ä–µ–¥–Ω—è',
    HARD: '–°–∫–ª–∞–¥–Ω–∞',
    INSANE: '–ë–æ–∂–µ–≤—ñ–ª—å–Ω–∞'
  }

  const formatDate = (iso) => {
    const date = new Date(iso)
    return date.toLocaleDateString('uk-UA', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  }

  const booleanText = (val) => (val ? '–¢–∞–∫' : '–ù—ñ')

  const handleJoin = async () => {
    try {
      console.log('üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –∫–∞–º–ø–∞–Ω—ñ—ó ID:', id)
      const res = await api.get(`/characters/campaign/${id}/user`)
      const characters = res.data
      console.log('‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤:', characters)

      if (characters.length > 0) {
        setUserCharacters(characters)
        setShowCharacterChoice(true)
      } else {
        setShowCreateConfirm(true)
      }
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤:', err)
    }
  }

  useEffect(() => {
    if (!campaign) return

    console.log('üì¶ CampaignModal –∑–º–æ–Ω—Ç–æ–≤–∞–Ω–æ')
    console.log('üÜî campaignId:', campaign.id)
    console.log('üë§ currentUser:', currentUser)
    console.log('üìã –ü–æ–≤–Ω–∞ –∫–∞–º–ø–∞–Ω—ñ—è:', campaign)
  }, [campaign, currentUser])

  if (!campaign) {
    console.warn('‚ö†Ô∏è CampaignModal: –ö–∞–º–ø–∞–Ω—ñ—è –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞')
    return null
  }

  return (
    <>
      <div className={styles.overlay}>
        <div className={styles.modal}>
          <button className={styles.closeButton} onClick={onClose}>‚úñ</button>

          <div className={styles.left}>
            <div className={styles.avatarWrapper}>
              <img src={avatar} alt="–ê–≤–∞—Ç–∞—Ä –∫–∞–º–ø–∞–Ω—ñ—ó" />
            </div>

            <div className={styles.joinWrapper}>
              {isDM ? (
                <button className={styles.button} onClick={() => router.push(`/campaigns/${id}/settings`)}>
                  –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
                </button>
              ) : isMember ? (
                <button className={styles.button} onClick={handleJoin}>
                  –£–≤—ñ–π—Ç–∏ –¥–æ –≥—Ä–∏
                </button>
              ) : isPublic ? (
                <button className={styles.button} onClick={handleJoin}>
                  –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è
                </button>
              ) : (
                <button className={styles.button} disabled>
                  –ü—Ä–∏–≤–∞—Ç–Ω–∞ –∫–∞–º–ø–∞–Ω—ñ—è
                </button>
              )}
            </div>
          </div>

          <div className={styles.right}>
            <h2 className={styles.title}>{name}</h2>
            <div className={styles.details}>
              <p><strong>DM:</strong> {owner?.nickname || owner?.username || '‚Äî'}</p>
              <p><strong>–¢–∏–ø:</strong> {isPublic ? '–ü—É–±–ª—ñ—á–Ω–∞' : '–ü—Ä–∏–≤–∞—Ç–Ω–∞'}</p>
              <p><strong>–°—Ç–≤–æ—Ä–µ–Ω–æ:</strong> {formatDate(createdAt)}</p>
              <p><strong>–°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å:</strong> {difficultyMap[difficulty] || difficulty}</p>
              <p><strong>–ì—Ä–∞–≤—Ü—ñ–≤:</strong> {playerCount} / {maxPlayers}</p>
              <p><strong>–°—Ç–∞—Ä—Ç–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å:</strong> {startLevel}</p>
              <p><strong>–ú—É–ª—å—Ç–∏–∫–ª–∞—Å:</strong> {booleanText(allowMulticlass)}</p>
              <p><strong>Homebrew:</strong> {booleanText(useHomebrew)}</p>
              <p><strong>–°—ñ—Ç–∫–∞ –º–∞–ø–∏:</strong> {mapGridSize}px</p>
            </div>

            {description && (
              <>
                <div className={styles.divider}>–û–ü–ò–°</div>
                <div className={styles.description}>{description}</div>
              </>
            )}
          </div>
        </div>
      </div>

      {showCharacterChoice && (
        <CharacterChoiceModal
          characters={userCharacters}
          onChoose={(characterId) => {
            console.log('üéÆ –û–±—Ä–∞–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', characterId)
            router.push(`/campaigns/${id}/game?character=${characterId}`)
          }}
          onCreateNew={() => {
            console.log('‚ûï –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞')
            router.push(`/campaigns/${id}/create-character`)
          }}
          onClose={() => setShowCharacterChoice(false)}
        />
      )}

      {showCreateConfirm && (
        <ConfirmCreateModal
          onConfirm={() => {
            console.log('‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞')
            router.push(`/campaigns/${id}/create-character`)
          }}
          onClose={() => setShowCreateConfirm(false)}
        />
      )}
    </>
  )
}
